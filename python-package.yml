# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package
env:
 EMAIL: ${{ secrets.EMAIL_2}}
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 mock softest unittest-xml-reporting
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        python -m unittest 
    - name: Upload Test as an Artifact
      uses: actions/upload-artifact@v2
      with:
         name: unit-test
         path: test/unit-test.xml
      
  build:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v3
            - name: Set Up Python 3.10
              uses: actions/setup-python@v3
              with:
                  python-version: "3.10"
            - name: Installing Dependencies
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install cx_Freeze
            - name: Build Exe
              run: |
                  python setup.py build
            - name: Upload Build Artifact
              uses: actions/upload-artifact@v3
              with:
                  name: mock-build
                  path: build/
                  
  shell-scripts:
    runs-on: ubuntu-latest
    steps:
    - name: Execute email script
      uses: actions/checkout@v3
    - run: | 
           sudo apt-get install mailutils
           echo "Sending E-Mail with linux default email" | mail -s "subject: S107 - Leonardo Lang as  Enviroment  Variable" EMAIL
           sh scripts/shell.sh

